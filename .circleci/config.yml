# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # - image: circleci/node:6.11.1-browsers
      #   - image: selenium/node-chrome:latest
      - image: circleci/node:6.11.1
      # - image: andriy007/circlecitest:latest
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      
      # run unit tests
      # - run: 
      #     name: "Unit Tests"
      #     command: "npm test"
      # run e2e tests
      - run:
          name: "Chrome Setup"
          command: |
            wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - 
            sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            apt-get update
            apt-get install -y google-chrome-stable
      - run: 
          name: "End to End Setup"
          command: |
            sudo su -c 'echo "deb http://deb.debian.org/debian jessie-backports main" >> /etc/apt/sources.list'
            sudo rm -rf /var/lib/apt/lists/*
            sudo apt-get update
            sudo apt install -t jessie-backports  openjdk-8-jre-headless ca-certificates-java
      - run:
          name: "making sure node-sass works properly"
          command: "npm rebuild node-sass"
      - run:
          name: "install node depenedencies"
          command: "npm install"
      - run:
          name: "start server"
          command: "npm run gulp serve"
          background: true
      # - run:
      #     name: "30 seconds time out"
      #     command: "setTimeout(function(){ console.log("finished time out"); }, 30000);"
      - run:
          name: "End to End Tests"
          command: npm run e2e